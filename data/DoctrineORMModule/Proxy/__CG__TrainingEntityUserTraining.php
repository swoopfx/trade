<?php

namespace DoctrineORMModule\Proxy\__CG__\Training\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class UserTraining extends \Training\Entity\UserTraining implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'id', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'user', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'training', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'status', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'startDate', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'endDate', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'createdOn', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'updatedOn', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'courseActivity', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'submitStatus', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'submittedAssignment'];
        }

        return ['__isInitialized__', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'id', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'user', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'training', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'status', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'startDate', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'endDate', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'createdOn', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'updatedOn', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'courseActivity', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'submitStatus', '' . "\0" . 'Training\\Entity\\UserTraining' . "\0" . 'submittedAssignment'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (UserTraining $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getTraining()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTraining', []);

        return parent::getTraining();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOn', []);

        return parent::getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedOn', []);

        return parent::getUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setTraining($training)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTraining', [$training]);

        return parent::setTraining($training);
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedOn($createdOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedOn', [$createdOn]);

        return parent::setCreatedOn($createdOn);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedOn($updatedOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedOn', [$updatedOn]);

        return parent::setUpdatedOn($updatedOn);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', []);

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', []);

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate($startDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', [$startDate]);

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate($endDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', [$endDate]);

        return parent::setEndDate($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCourseActivity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCourseActivity', []);

        return parent::getCourseActivity();
    }

    /**
     * {@inheritDoc}
     */
    public function addCourseActivity(\Training\Entity\UserCourseActivity $courseActivity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCourseActivity', [$courseActivity]);

        return parent::addCourseActivity($courseActivity);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCourseActivity(\Training\Entity\UserCourseActivity $courseActivity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCourseActivity', [$courseActivity]);

        return parent::removeCourseActivity($courseActivity);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmitStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmitStatus', []);

        return parent::getSubmitStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubmitStatus($submitStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubmitStatus', [$submitStatus]);

        return parent::setSubmitStatus($submitStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmittedAssignment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmittedAssignment', []);

        return parent::getSubmittedAssignment();
    }

}
