<?php

namespace DoctrineORMModule\Proxy\__CG__\Shop\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Image extends \Shop\Entity\Image implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'id', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'imageUid', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'imageUrl', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'lowres', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'thumbnail', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'imageName', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'isHidden', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'mimeType', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'docExt', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'createdOn', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'updatedOn'];
        }

        return ['__isInitialized__', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'id', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'imageUid', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'imageUrl', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'lowres', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'thumbnail', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'imageName', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'isHidden', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'mimeType', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'docExt', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'createdOn', '' . "\0" . 'Shop\\Entity\\Image' . "\0" . 'updatedOn'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Image $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getImageUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageUrl', []);

        return parent::getImageUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOn', []);

        return parent::getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedOn', []);

        return parent::getUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setImageUrl($imageUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageUrl', [$imageUrl]);

        return parent::setImageUrl($imageUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedOn($createdOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedOn', [$createdOn]);

        return parent::setCreatedOn($createdOn);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedOn($updatedOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedOn', [$updatedOn]);

        return parent::setUpdatedOn($updatedOn);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageName', []);

        return parent::getImageName();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsHidden()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsHidden', []);

        return parent::getIsHidden();
    }

    /**
     * {@inheritDoc}
     */
    public function getMimeType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMimeType', []);

        return parent::getMimeType();
    }

    /**
     * {@inheritDoc}
     */
    public function getDocExt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocExt', []);

        return parent::getDocExt();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageName($imageName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageName', [$imageName]);

        return parent::setImageName($imageName);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsHidden($isHidden)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsHidden', [$isHidden]);

        return parent::setIsHidden($isHidden);
    }

    /**
     * {@inheritDoc}
     */
    public function setMimeType($mimeType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMimeType', [$mimeType]);

        return parent::setMimeType($mimeType);
    }

    /**
     * {@inheritDoc}
     */
    public function setDocExt($docExt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocExt', [$docExt]);

        return parent::setDocExt($docExt);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageUid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageUid', []);

        return parent::getImageUid();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageUid($imageUid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageUid', [$imageUid]);

        return parent::setImageUid($imageUid);
    }

    /**
     * {@inheritDoc}
     */
    public function getThumbnail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThumbnail', []);

        return parent::getThumbnail();
    }

    /**
     * {@inheritDoc}
     */
    public function setThumbnail($thumbnail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThumbnail', [$thumbnail]);

        return parent::setThumbnail($thumbnail);
    }

    /**
     * {@inheritDoc}
     */
    public function getLowres()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLowres', []);

        return parent::getLowres();
    }

    /**
     * {@inheritDoc}
     */
    public function setLowres($lowres)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLowres', [$lowres]);

        return parent::setLowres($lowres);
    }

}
