<?php
echo $this->headtitle("Add Product");
echo $this->headLink()->appendStylesheet($this->basepath('assets/plugins/smartwizard/dist/css/smart_wizard.css'));
// echo $this->headLink()->appendStylesheet($this->basepath('/admin/assets/plugins/parsley/src/parsley.css'));
// echo $this->headLink()->appendStylesheet($this->basepath('/admin/assets/plugins/switchery/switchery.min.css'));
?>



<!-- begin page-header -->
<h1 class="page-header">
    Post a Product <small></small>
</h1>


<div id="productLogic">



    <div v-if="isError" class="alert alert-danger fade show">
        <span class="close" data-dismiss="alert">Ã—</span> <strong>Error!</strong>
        {{error}}
    </div>
    <div v-if="isUploadPhase" class="row">

        <div class="col-lg-6">
            <!-- begin panel -->
            <div v-if="loadingImages" class="col-lg-8 col-md-8">
                <div style="text-align: center;" class="fa-6x">
                    <i class="fas fa-circle-notch fa-spin"></i>
                </div>
            </div>
            <div v-else class="panel panel-inverse" data-sortable-id="table-basic-7">
                <!-- begin panel-heading -->
                <div class="panel-heading">
                    <div class="panel-heading-btn">
                        <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a> <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-redo"></i></a> <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                    </div>
                    <h4 class="panel-title">Uploaded Images</h4>
                </div>
                <!-- end panel-heading -->
                <!-- begin panel-body -->
                <div class="panel-body">
                    <!-- begin table-responsive -->
                    <div class="table-responsive">
                        <table class="table table-striped m-b-0">

                            <tbody>

                                <tr v-for="image in uploadedImages">
                                    <td class="with-img"><img :src="image.url" class="img-rounded height-30" /></td>
                                    <td>{{image.er}}</td>

                                    <td class="with-btn" nowrap><a href="#" class="btn btn-sm btn-primary width-60 m-r-2"><i class="fa fa-eye"></i></a> <a href="#" class="btn btn-sm btn-danger "><i class="fa fa-trash"></i></a></td>
                                </tr>


                            </tbody>
                        </table>
                    </div>
                    <!-- end table-responsive -->
                </div>
                <!-- end panel-body -->

            </div>
            <!-- end panel -->



            <div class="panel panel-inverse" data-sortable-id="table-basic-7">
                <!-- begin panel-heading -->
                <div class="panel-heading">
                    <div class="panel-heading-btn">
                        <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a> <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-redo"></i></a> <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                    </div>
                    <h4 class="panel-title">Upload Images</h4>
                </div>
                <!-- end panel-heading -->
                <!-- begin panel-body -->
                <div class="panel-body">
                    <form>

                        <div class="form-group row m-b-15">
                            <!-- <label class="col-sm-3 col-form-label">Readonly Plaintext</label> -->

                            <div class="col-sm-12">
                                <input type="file" class="form-control" ref="productFile" />
                            </div>
                        </div>
                        <div class="form-group row m-b-15">
                            <!-- <label class="col-sm-3 col-form-label">Pa</label> -->
                            <div class="col-sm-12">
                                <input type="button" @click="uploadImage()" class="form-control btn btn-purple" value="Upload" />
                            </div>
                        </div>
                    </form>
                </div>
                <!-- end panel-body -->
                <div v-if="isUploadingImage" class="col-lg-8 col-md-8">
                    <div style="text-align: center;" class="fa-6x">
                        <i class="fas fa-circle-notch fa-spin"></i>
                    </div>
                </div>

            </div>
            <!-- end panel -->


        </div>

        <div class="col-lg-6">
            <!-- begin panel -->
            <div class="panel panel-inverse" data-sortable-id="table-basic-7">
                <!-- begin panel-heading -->
                <div class="panel-heading">

                    <h4 class="panel-title">
                        Product Details <span class="label label-success m-l-5 t-minus-1">NEW</span>
                    </h4>

                </div>
                <!-- end panel-heading -->
                <!-- begin panel-body -->
                <div class="panel-body">
                    <!-- begin table-responsive -->
                    <div class="table-responsive">
                        <table class="table table-striped m-b-0">
                            <thead>

                            </thead>
                            <tbody>

                                <tr>
                                    <td><strong>SKU</strong></td>
                                    <td>{{sku}}</td>

                                </tr>
                                <tr>
                                    <td><strong>Product Name</strong></td>
                                    <td>{{productName}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <!-- end table-responsive -->

                </div>
                <!-- end panel-body -->
                <div class="panel-footer text-right">
                    <p>
                        <input type="checkbox" data-render="switchery" data-theme="default" checked /> <span class="text-muted m-l-5 m-r-20">checked</span> <input type="checkbox" data-render="switchery" data-theme="default" /> <span class="text-muted m-l-5">unchecked</span>
                    </p>
                </div>
            </div>
            <!-- end panel -->
            <!-- begin panel -->



        </div>

    </div>
    <div v-else class="row">
        <!-- end page-header -->


        <div class="col-lg-10">
            <!-- begin wizard-form -->

            <div>
                <?php

                $form->prepare();
                echo $this->form()->openTag($form);
                ?>

                <!-- begin wizard -->
                <div id="wizard">
                    <!-- begin wizard-step -->
                    <ul>
                        <li class="col-md-3 col-sm-4 col-6"><a href="#step-1"> <span class="number">1</span> <span class="info text-ellipsis">
                                    Product Information </span>
                            </a></li>
                        <li class="col-md-3 col-sm-4 col-6"><a href="#step-2"> <span class="number">2</span> <span class="info text-ellipsis">Product
                                    Details </span>
                            </a></li>
                        <li class="col-md-3 col-sm-4 col-6"><a href="#step-3"> <span class="number">3</span> <span class="info text-ellipsis">
                                    Product Features
                                    <!-- 								<small class="text-ellipsis">Enter your username and -->
                                    <!-- 										password</small> -->
                                </span>
                            </a></li>
                        <li class="col-md-3 col-sm-4 col-6"><a href="#step-4"> <span class="number">4</span> <span class="info text-ellipsis">
                                    Completed <small class="text-ellipsis">Complete Registration</small>
                                </span>
                            </a></li>
                    </ul>
                    <!-- end wizard-step -->
                    <!-- begin wizard-content -->
                    <div>
                        <!-- begin step-1 -->
                        <div id="step-1">
                            <!-- begin fieldset -->
                            <fieldset>
                                <!-- begin row -->
                                <div class="row">
                                    <!-- begin col-8 -->
                                    <div class="col-md-10 offset-md-2">
                                        <legend class="no-border f-w-700 p-b-0 m-t-0 m-b-20 f-s-16 text-white">Product
                                            Description</legend>
                                        <!-- begin form-group -->
                                        <?php
                                        echo $this->partial("shop_product_fieldset", array(
                                            "fieldset" => $form->get("productFieldset")
                                        ));

                                        ?>

                                        <!-- end form-group -->




                                    </div>
                                    <!-- end col-8 -->
                                </div>
                                <!-- end row -->
                            </fieldset>
                            <!-- end fieldset -->
                        </div>
                        <!-- end step-1 -->
                        <!-- begin step-2 -->
                        <div id="step-2">
                            <!-- begin fieldset -->
                            <fieldset>
                                <!-- begin row -->
                                <div class="row">
                                    <!-- begin col-8 -->
                                    <div class="col-md-10 offset-md-2">
                                        <legend class="no-border f-w-700 p-b-0 m-t-0 m-b-20 f-s-16 text-white">You
                                            contact info, so that we can easily reach you</legend>
                                        <!-- begin form-group -->
                                        <?php echo $this->partial("shop_product_feature_fieldset", array("dfieldset" => $form->get("productFieldset"))); ?>

                                        <!-- end form-group -->

                                    </div>
                                    <!-- end col-8 -->
                                </div>
                                <!-- end row -->
                            </fieldset>
                            <!-- end fieldset -->
                        </div>
                        <!-- end step-2 -->
                        <!-- begin step-3 -->
                        <div id="step-3">
                            <!-- begin fieldset -->
                            <fieldset>
                                <!-- begin row -->
                                <div class="row">
                                    <!-- begin col-8 -->
                                    <div class="col-md-8 offset-md-2">
                                        <legend class="no-border f-w-700 p-b-0 m-t-0 m-b-20 f-s-16 text-white">Attributes
                                            and Features</legend>
                                        <!-- begin form-group -->

                                        <?php

                                        $productFeaturesCollection = $form->get("productFieldset")->get("productFeatures");
                                        foreach ($productFeaturesCollection as $collectionFieldset) {
                                            echo $this->partial("shop_product_features_collection_fieldset", array(
                                                "featurCollectionfieldset" => $collectionFieldset
                                            )) ?>

                                        <?php } ?>

                                        <!-- <div class="form-group row m-b-10"></div> -->
                                        <br>
                                        <hr>
                                        <?php
                                        // $attributeCollectionfieldset
                                        // var_dump($form->get("productFieldset")->get("productAttributes"));
                                        $productAttributeCollection = $form->get("productFieldset")->get("productAttributes");
                                        foreach ($productAttributeCollection as $col) {

                                            echo $this->partial("shop_product_attribute_collection_fieldset", array(
                                                "att" => $col
                                            ));
                                        }
                                        ?>


                                    </div>
                                    <!-- end col-8 -->
                                </div>
                                <!-- end row -->
                            </fieldset>
                            <!-- end fieldset -->
                        </div>
                        <!-- end step-3 -->
                        <!-- begin step-4 -->
                        <div id="step-4">
                            <div class=" m-b-0 text-center">
                                <h2 class="text-inverse">Summary</h2>

                                <?php echo $this->partial("shop_product_fieldset_summary") ?>
                                <p>
                                    <?php
                                    // echo $this->formRow($form->get('csrf'));
                                    // echo $this->formsubmit($form->get("submit"));

                                    ?>
                                    <button type="button" @click="onSubmitProduct()" :disabled="isCreatingProduct" class="btn btn-success" value="Submit Product">Create Product</button>
                                </p>
                            </div>
                        </div>
                        <!-- end step-4 -->
                    </div>
                    <!-- end wizard-content -->
                </div>
                <!-- end wizard -->
                <?php echo $this->form()->closeTag() ?>
            </div>
        </div>
        <!-- end wizard-form -->
    </div>
</div>
<!-- begin row -->


<!-- ================== BEGIN PAGE LEVEL JS ================== -->
<!-- <script src="/admin/assets/plugins/parsley/dist/parsley.js"></script> -->
<!-- <script src="/admin/assets/plugins/jquery-smart-wizard/src/js/jquery.smartWizard.js"></script> -->
<!-- <script src="/admin/assets/plugins/switchery/switchery.min.js"></script> -->
<!-- <script src="/admin/assets/js/demo/form-slider-switcher.demo.min.js"></script> -->
<!-- <script src="/admin/assets/js/demo/form-wizards-validation.demo.min.js"></script> -->



<?php
echo $this->inlineScript()
    ->appendFile($this->basePath('/assets/plugins/parsleyjs/dist/parsley.js'))
    ->appendFile($this->basePath('/assets/plugins/smartwizard/dist/js/jquery.smartWizard.js'))
    ->appendFile($this->basePath('/assets/js/demo/form-wizards-validation.demo.js'));
?>

<!-- ================== END PAGE LEVEL JS ================== -->
<script>
    // Vue.component(
    //     'file-brower', {
    //         template: '#file-brower-tempate',
    //         data: function() {
    //             return {
    //                 id: 'vu-' + Math.floor(Math.random() * (999999 - 11111) + 11111),
    //                 title: 'é»˜è®¤title',
    //                 url: 'é»˜è®¤url'
    //             }
    //         },
    //         methods: {
    //             show: function(title, url) {
    //                 this.title = title;
    //                 this.url = url;
    //                 console.log(this.title, this.url);
    //                 $('#' + this.id).modal('show');
    //             }
    //         }
    //     }
    // );

    var vue = new Vue({
        el: "#productLogic",
        data: {
            isCreatingProduct: false,
            disableButton: false,
            isUploadPhase: false, // defines if the SPA is in the upload image phase
            aerrors: [],
            isError: false,
            errors: [],
            isUploadImage: false,
            isUploadingImage: false, // If the system is uploading Image
            loadingImages: false, // show loading spinner if true
            uploadedImages: [],


            discount_quantit: "",
            garmentTypeDisabled: true,
            garmentTypeLoading: false,
            garmentTypes: [],
            garmentSize: [],


            isSubmitFeatureForm: false,
            featureLoading: false,
            isRemoveFeature: false,
            isShipping: false,
            loadingAttributes: false,
            isSubmitAttributeForm: false,
            isRemoveAttribute: false,
            isSubtractQuantity: true,
            checkedSizes: [],
            selectedSizeQuantity: [],
            checkedSizeQuantity: [],

            sizeAndQuantity: [],


            skuError: false,
            productDescription: "uuu",
            tag: "",
            metaTitle: "",
            metaDescription: "",
            metaKeyword: "",
            category: "",
            garmentType: [],

            price: "",
            isDiscount: false,
            isDiscountError: false,
            discountError: "",
            featureSubmitEnabled: true,
            productFeatureType: "",
            selectedFeature: "",
            productFeatureInfo: "",
            availableSizes: [],
            productAttributes: [],
            productFeaturess: [],
            width: 0,
            length: 0,
            weight: 0,
            height: 0,
            quantity: 1,
            points: 0,
            pointMinQuantity: 0,
            productTax: 10,
            dateAvailable: "",
            // minimum: "",
            subtract: true,
            errors: [],
            counter: 3,
            checked: false,

            attributes: [],
            garmentSex: "",
            garmentMaturity: "",

            // Response
            productId: "",
            productUid: "",
            sku: "",
            productName: "",

            modalShow: false,
            lastClick: "",

        },

        computed: {

            // sizeQuantityModel(id){
            //     return 
            // }
        },
        mounted() {
            this.getFeatures();

        },


        methods: {


            createSizeQuantity(size, quantity) {
                var saq = {
                    siz: size,
                    quant: quantity,
                };

                if (this.sizeAndQuantity.some(cou => cou.siz == saq.siz)) {
                    this.sizeAndQuantity = this.sizeAndQuantity.filter(function(obj) {
                        return obj.siz !== saq.siz;
                    });
                    // console.log(this.sizeAndQuantity);
                    this.sizeAndQuantity.push(saq);
                } else {
                    // insert new one
                    this.sizeAndQuantity.push(saq);
                }


                // console.log(this.sizeAndQuantity);
            },


            changeSelectedSizeStatus() {
                // this.sizeAndQuantity = this.sizeAndQuantity.filter(function(obj) {
                //         return obj.siz === this.checkedSizes;
                //     });
            },

            selectedSize(sizeid) {
                if (this.checkedSizes.some(cou => cou == sizeid)) {

                    return true;
                } else {

                    return false;
                }
                // console.log(this.sizeAndQuantity);
            },
            setGarmentSex() {
                if (this.category == "100") {
                    this.garmentSex = "10";
                    this.garmentMaturity = "10";
                    //get male 
                    //disable Garment Sex
                } else if (this.category == "200") {
                    this.garmentSex = "20";
                    this.garmentMaturity = "10"
                } else if (this.category == "400") {
                    this.garmentSex = "10";
                    this.garmentMaturity = "100";
                } else if (this.category == '500') {
                    this.garmentSex = "20";
                    this.garmentMaturity = "100";
                }
            },

            validateDiscountPrice() {
                if (this.$refs.isDiscount.value == true) {
                    if (this.$refs.discountPrice.value >= this.$refs.discount.value) {
                        this.isDiscountError = true;
                        this.discountError = "Discounted Price should be lesser than product price";
                    }

                    if (this.$refs.discount_quantity.value == 0 || this.$refs.discount_quantity.value == "") {
                        this.isDiscountError = true;
                        this.discountError = "The Miinimum quantity must be specified"
                    }

                    if (this.$refs.discountDateStart.value == "" || this.$refs.discountDateEnd.value == "") {
                        this.isDiscountError = true;
                        this.discountError = "The discount strat dat and end date needs to be specified"
                    }
                }
            },

            disCountCheckboxStatus() {
                this.isDiscount = !this.isDiscount;
            },

            shippingStatus() {
                this.isShipping = !this.isShipping
            },


            subtractQuantity() {
                this.isSubtractQuantity = !this.isSubtractQuantity;
            },

            checkSkuValidation: function() {
                // this.skuError = true;
                if (this.$refs.sku.value == "") {
                    // this.skuError = true;
                } else {
                    axios.get("/bbmin/productjson/skuvalidation", {
                        params: {
                            sku: this.$refs.sku.value
                        }
                    }).then(response => {
                        if (response.status == 200) {
                            if (response.data.sku == 0) {
                                this.skuError = false;
                            } else {
                                this.skuError = true;
                            }

                        }
                    });
                }
            },

            selectGarmentType: function() {
                this.garmentTypeLoading = true;
                axios.get("/bbmin/productjson/get-garment-type", {
                    params: {
                        id: this.$refs.category.value
                    }
                }).then(response => {
                    if (response.status == 200) {
                        this.garmentTypes = response.data.type;
                        this.garmentTypeLoading = false;
                        this.garmentTypeDisabled = false;
                    }
                });

                this.setGarmentSex();


                axios.get("/bbmin/productjson/get-garment-size/", {
                    params: {
                        sexid: this.garmentSex,
                        matid: this.garmentMaturity,
                    }
                }).then(res => {
                    if (res.status == 200) {
                        this.garmentSize = res.data.size
                    }
                });

            },

            uploadImage: function() {
                this.isUploadingImage = true;
                let formData = new FormData();
                formData.append("image", this.$refs.productFile.file[0]);
                // formData.append("productid", this.productId);
                axios.post("/bbmin/productjson/upload-product-image", formData, {
                    headers: {
                        "Content-Type": "multipart/form-data"
                    }
                }).then(response => {
                    if (response.status == 201) {
                        this.isUploadingImage = false;
                        this.getImages(this.productUid);
                    }
                });
            },


            getImages: function(productUid) {
                this.loadingImages = true;
                axios.get("/bbmin/productjson/productimages/" + productUid).then(response => {
                    if (response.status == 200) {
                        this.uploadedImages = response.data.images;
                        this.loadingImages = false;
                    }
                });
            },

            onSubmitProduct: function() {

                this.isCreatingProduct = true;
                // console.log(this.$refs.availableSizes.value);
                let formData = new FormData();
                formData.append("productName", this.$refs.productName.value);
                formData.append("description", this.$refs.productDescription.value);
                // tag: this.$refs.productTag.value,
                formData.append("metaTitle", this.$refs.productMetaTitle.value);
                formData.append("metaDescription", this.$refs.metaDescription.value);
                formData.append("metaKeyword", this.$refs.metaKeyword.value);

                formData.append('selectedSizes', JSON.stringify(this.checkedSizes));
                formData.append('sizeAnQuantity', JSON.stringify(this.sizeAndQuantity));
                if (this.isDiscount == true) {
                    formData.append("discount_quantity", this.$refs.discount_quantity.value);
                    formData.append("discountPrice", this.$refs.discountPrice.value);
                    formData.append("discountDateStart", this.$refs.discountDateStart.value);
                    formData.append("discountDateEnd", this.$resf.discountDateEnd.value);
                }


                formData.append("category", this.$refs.category.value);
                formData.append("garmentType", this.$refs.garmentTypes.value);
                // formData.append("availableSizes", this.checkedSizes);
                formData.append("sku", this.$refs.sku.value);
                // formData.append("quantity", this.$refs.quantity.value);
                formData.append("price", this.$refs.price.value);
                formData.append("stockStatus", this.$refs.stockStatus.value);
                formData.append("isShipping", this.$refs.isShipping.value);
                // formData.append("sex", this.garmentSex);


                formData.append("isDiscount", this.isDiscount);
                formData.append("points", this.$refs.points.value);
                formData.append("pointMinQuantity", this.$refs.pointMinQuantity.value);
                formData.append("tax", this.$refs.productTax.value);
                formData.append("dateAvailable", this.$refs.dateAvailaible.value);
                formData.append("weight", this.$refs.weight.value);
                formData.append("length", this.$refs.length.value);
                formData.append("width", this.$refs.width.value);
                formData.append("height", this.$refs.height.value);
                formData.append("subtract", this.isSubtractQuantity);
                formData.append("minimum", this.$refs.minimum.value);



                axios.post("/bbmin/productjson/create-product", formData).then(
                    response => {
                        if (response.status == 201) {
                            
                            // this.productId = response.data.id;
                            // this.productUid = response.data.uid;
                            // console.log(this.productUid);
                            // this.productName = response.data.name;
                            // this.sku = response.data.sku;
                            // this.isUploadPhase = true;
                            this.isCreatingProduct = false;
                            window.location.replace('/bbmin/shop/manageproduct/'+response.data.uid);
                        } else if (response.status == 200) {
                            // define error status
                            this.isError = true;
                            this.error = response.data.error
                            swal({
                                title: "Error",
                                text: err.response.data.messages,
                                icon: "error",
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#3085d6',
                                confirmButtonText: 'OK'
                            })
                        } else {
                            this.isError = true;
                            this.error = response.data.error
                        }
                    }).catch(err => {
                    swal({
                        title: "Error",
                        text: err.response.data.message,
                        icon: "error",
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'OK'
                    })
                });
            },

            onPublishProduct: function() {

            },

            // getSize(){
            // 	axios.get("/bbmin/productjson/get-garment-size/"+).then(res=>{
            // 		if(res.status == 200){
            // 			this.garmentSize = res.data.size
            // 		}
            // 	});
            // },

            getFeatures: function() {
                this.featureLoading = true;
                axios.get("/bbmin/productjson/getproduct-feature").then(response => {
                    if (response.status == 200) {
                        this.productFeaturess = response.data.response;
                        this.featureLoading = false;
                    }
                });
            },
            addFeature: function() {
                this.featureLoading = true;
                this.isSubmitFeatureForm = true;
                this.featureSubmitEnabled = false;
                if (this.$refs.productFeatureType.value == "") {
                    this.errors.push('Feature Type Required');
                    !this.featureSubmitEnabled;
                } else if (this.$refs.productFeatureInfo.value == "") {
                    this.errors.push('Desciption  Required');
                    !this.featureSubmitEnabled;
                } else {
                    // var latestSelectedFeature = this.productFeatures.find(p => p.id === this.productFeatureType);
                    // console.log(this.$refs.productFeatureType);

                    axios.post("/bbmin/productjson/addproductfeature", {
                        type: this.$refs.productFeatureType.value,
                        info: this.$refs.productFeatureInfo.value
                    }).then(
                        response => {
                            if (response.status == 201) {
                                this.$refs.productFeatureInfo.value = "";
                                this.$refs.productFeatureType.value = "";
                                this.isSubmitFeatureForm = false;
                                this.getFeatures();


                            }
                        }
                    )
                }
            },


            removeFeature: function(featureKey) {
                axios.put("/bbmin/productjson/removeproduct-feature", {
                    key: featureKey
                }).then(response => {
                    if (response.status == 200) {
                        this.getFeatures();
                    } else {
                        this.isError = true;
                        this.error = "We could not remove the Feature at this time";
                    }
                });
            },
            getProductAttribute() {
                this.loadingAttributes = true;
                axios.get("/bbmin/productjson/getproduct-attributes").then(response => {
                    if (response.status == 200) {
                        this.productAttributes = response.data.response;
                        this.loadingAttributes = false;
                    }
                }).catch();
            },
            addAddribute: function() {
                this.isSubmitAttributeForm = true;
                if (this.$refs.attributeName.value == "" || this.$refs.attributetext.value == "") {
                    this.aerrors.push('Field is Required');
                } else {
                    let formData = new FormData();
                    formData.append("name", this.$refs.attributeName.value);
                    formData.append("description", this.$refs.attributetext.value);
                    console.log(this.$refs.attributeName.value);
                    axios.post("/bbmin/productjson/addproductattributes", formData).then(response => {
                        if (response.status == 201) {

                            this.$refs.attributeName.value = "";
                            this.$refs.attributetext.value = "";
                            this.isSubmitAttributeForm = false;
                            this.getProductAttribute();
                        }
                    }).catch(err => {

                    });
                }
            },

            removeAttribute: function(attributeKey) {

                axios.put("/bbmin/productjson/removeproduct-attributes", {
                    key: attributeKey
                }).then(response => {
                    if (response.status == 200) {
                        this.getProductAttribute();
                    } else {
                        this.isError = true;
                        this.error = "We could not remove the Feature at this time";
                    }
                });
            }
        },



    });
</script>