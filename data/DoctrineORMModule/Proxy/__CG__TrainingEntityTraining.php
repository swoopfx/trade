<?php

namespace DoctrineORMModule\Proxy\__CG__\Training\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Training extends \Training\Entity\Training implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'id', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'trainingUid', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'trainingTopic', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'trainingDescription', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'programmes', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'image', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'createdOn', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'updatedOn', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'trainingPoints', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'subscriber', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'duration', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'isPublished', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'trainingMilestone'];
        }

        return ['__isInitialized__', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'id', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'trainingUid', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'trainingTopic', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'trainingDescription', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'programmes', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'image', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'createdOn', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'updatedOn', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'trainingPoints', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'subscriber', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'duration', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'isPublished', '' . "\0" . 'Training\\Entity\\Training' . "\0" . 'trainingMilestone'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Training $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTrainingTopic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrainingTopic', []);

        return parent::getTrainingTopic();
    }

    /**
     * {@inheritDoc}
     */
    public function getTrainingDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrainingDescription', []);

        return parent::getTrainingDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOn', []);

        return parent::getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedOn', []);

        return parent::getUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setTrainingTopic($trainingTopic)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrainingTopic', [$trainingTopic]);

        return parent::setTrainingTopic($trainingTopic);
    }

    /**
     * {@inheritDoc}
     */
    public function setTrainingDescription($trainingDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrainingDescription', [$trainingDescription]);

        return parent::setTrainingDescription($trainingDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedOn($createdOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedOn', [$createdOn]);

        return parent::setCreatedOn($createdOn);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedOn($updatedOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedOn', [$updatedOn]);

        return parent::setUpdatedOn($updatedOn);
    }

    /**
     * {@inheritDoc}
     */
    public function getProgrammes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgrammes', []);

        return parent::getProgrammes();
    }

    /**
     * {@inheritDoc}
     */
    public function setProgrammes($programmes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProgrammes', [$programmes]);

        return parent::setProgrammes($programmes);
    }

    /**
     * {@inheritDoc}
     */
    public function addProgrammes(\Training\Entity\Programmes $programmes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProgrammes', [$programmes]);

        return parent::addProgrammes($programmes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProgrammes(\Training\Entity\Programmes $programmes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProgrammes', [$programmes]);

        return parent::removeProgrammes($programmes);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrainingUid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrainingUid', []);

        return parent::getTrainingUid();
    }

    /**
     * {@inheritDoc}
     */
    public function getTrainingPoints()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrainingPoints', []);

        return parent::getTrainingPoints();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscriber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscriber', []);

        return parent::getSubscriber();
    }

    /**
     * {@inheritDoc}
     */
    public function getDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuration', []);

        return parent::getDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrainingUid($trainingUid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrainingUid', [$trainingUid]);

        return parent::setTrainingUid($trainingUid);
    }

    /**
     * {@inheritDoc}
     */
    public function setTrainingPoints($trainingPoints)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrainingPoints', [$trainingPoints]);

        return parent::setTrainingPoints($trainingPoints);
    }

    /**
     * {@inheritDoc}
     */
    public function addSubscriber(\Training\Entity\UserTraining $subscriber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubscriber', [$subscriber]);

        return parent::addSubscriber($subscriber);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubscriber(\Training\Entity\UserTraining $subscriber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubscriber', [$subscriber]);

        return parent::removeSubscriber($subscriber);
    }

    /**
     * {@inheritDoc}
     */
    public function setDuration($duration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuration', [$duration]);

        return parent::setDuration($duration);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPublished', []);

        return parent::getIsPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPublished($isPublished)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPublished', [$isPublished]);

        return parent::setIsPublished($isPublished);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrainingMilestone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrainingMilestone', []);

        return parent::getTrainingMilestone();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscriber($subscriber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscriber', [$subscriber]);

        return parent::setSubscriber($subscriber);
    }

}
