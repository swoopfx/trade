<?php

namespace DoctrineORMModule\Proxy\__CG__\Settings\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Size extends \Settings\Entity\Size implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'id', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'collar', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'sizeRange', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'sex', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'sizeCategory', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'size', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'bust', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'naturalWaist', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'hip', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'overarm', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'lowWaist', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'innerLeg', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'sleeve', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'maturityCategory'];
        }

        return ['__isInitialized__', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'id', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'collar', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'sizeRange', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'sex', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'sizeCategory', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'size', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'bust', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'naturalWaist', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'hip', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'overarm', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'lowWaist', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'innerLeg', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'sleeve', '' . "\0" . 'Settings\\Entity\\Size' . "\0" . 'maturityCategory'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Size $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getSizeCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSizeCategory', []);

        return parent::getSizeCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function getSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSize', []);

        return parent::getSize();
    }

    /**
     * {@inheritDoc}
     */
    public function getBust()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBust', []);

        return parent::getBust();
    }

    /**
     * {@inheritDoc}
     */
    public function getNaturalWaist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNaturalWaist', []);

        return parent::getNaturalWaist();
    }

    /**
     * {@inheritDoc}
     */
    public function getHip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHip', []);

        return parent::getHip();
    }

    /**
     * {@inheritDoc}
     */
    public function getOverarm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOverarm', []);

        return parent::getOverarm();
    }

    /**
     * {@inheritDoc}
     */
    public function getLowWaist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLowWaist', []);

        return parent::getLowWaist();
    }

    /**
     * {@inheritDoc}
     */
    public function getInnerLeg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInnerLeg', []);

        return parent::getInnerLeg();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setSizeCategory($sizeCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSizeCategory', [$sizeCategory]);

        return parent::setSizeCategory($sizeCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function setSize($size)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSize', [$size]);

        return parent::setSize($size);
    }

    /**
     * {@inheritDoc}
     */
    public function setBust($bust)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBust', [$bust]);

        return parent::setBust($bust);
    }

    /**
     * {@inheritDoc}
     */
    public function setNaturalWaist($naturalWaist)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNaturalWaist', [$naturalWaist]);

        return parent::setNaturalWaist($naturalWaist);
    }

    /**
     * {@inheritDoc}
     */
    public function setHip($hip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHip', [$hip]);

        return parent::setHip($hip);
    }

    /**
     * {@inheritDoc}
     */
    public function setOverarm($overarm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOverarm', [$overarm]);

        return parent::setOverarm($overarm);
    }

    /**
     * {@inheritDoc}
     */
    public function setLowWaist($lowWaist)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLowWaist', [$lowWaist]);

        return parent::setLowWaist($lowWaist);
    }

    /**
     * {@inheritDoc}
     */
    public function setInnerLeg($innerLeg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInnerLeg', [$innerLeg]);

        return parent::setInnerLeg($innerLeg);
    }

    /**
     * {@inheritDoc}
     */
    public function getSex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSex', []);

        return parent::getSex();
    }

    /**
     * {@inheritDoc}
     */
    public function setSex($sex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSex', [$sex]);

        return parent::setSex($sex);
    }

    /**
     * {@inheritDoc}
     */
    public function getSleeve()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSleeve', []);

        return parent::getSleeve();
    }

    /**
     * {@inheritDoc}
     */
    public function setSleeve($sleeve)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSleeve', [$sleeve]);

        return parent::setSleeve($sleeve);
    }

    /**
     * {@inheritDoc}
     */
    public function getSizeRange()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSizeRange', []);

        return parent::getSizeRange();
    }

    /**
     * {@inheritDoc}
     */
    public function setSizeRange($sizeRange)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSizeRange', [$sizeRange]);

        return parent::setSizeRange($sizeRange);
    }

    /**
     * {@inheritDoc}
     */
    public function getCollar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCollar', []);

        return parent::getCollar();
    }

    /**
     * {@inheritDoc}
     */
    public function setCollar($collar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCollar', [$collar]);

        return parent::setCollar($collar);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaturityCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaturityCategory', []);

        return parent::getMaturityCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaturityCategory($maturityCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaturityCategory', [$maturityCategory]);

        return parent::setMaturityCategory($maturityCategory);
    }

}
